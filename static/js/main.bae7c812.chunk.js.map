{"version":3,"sources":["components/modal.js","components/form.js","components/nav.js","components/books.js","components/card.js","index.js"],"names":["MyVerticallyCenteredModal","props","console","log","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","className","type","name","placeholder","onChange","e","value","htmlFor","Footer","required","Button","onClick","title","author","pages","read","onHide","AppModal","React","useState","modalShow","setModalShow","variant","show","Form","this","Component","Nav","DisplayBook","book","changeHandle","changeToggle","Card","books","map","key","savedLibrary","JSON","parse","localStorage","getItem","App","_","cloneDeep","library","setLibrary","setState","target","prevState","innerHTML","new_book","Date","getTime","updated_library","push","setItem","stringify","given_id","new_books","filter","cur_book","changed_state","editBooks","item","temp","Object","assign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bae7c812.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import React, { useState } from \"react\";\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  console.log(props, \"in vercenter\");\r\n\r\n  return (\r\n    // console.log('return executed')\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {/* when modal is open, reset all the inputs  */}\r\n          {/* e.g. when toggling read state, state remains changed and form vaildation goes through without specifying read state since it still remains changed from previous state */}\r\n          {/* ////////////////////////////////////////////////// */}\r\n          Add a new book\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* create input to get book object here */}\r\n        <form>\r\n          <div className=\"py-2\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Bookname\"\r\n              onChange={(e) => {\r\n                props.onChange(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"py-2\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"author\"\r\n              placeholder=\"Author name\"\r\n              onChange={(e) => {\r\n                props.onChange(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"py-2\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"pages\"\r\n              placeholder=\"Pages\"\r\n              onChange={(e) => {\r\n                props.onChange(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"py-2\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"read\"\r\n              name=\"read\"\r\n              value=\"Read\"\r\n              onChange={(e) => {\r\n                props.onChange(e);\r\n              }}\r\n            />\r\n            <label htmlFor=\"read\" className=\"mr-2\">\r\n              Read\r\n            </label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"not-read\"\r\n              name=\"read\"\r\n              value=\"Unread\"\r\n              onChange={(e) => {\r\n                props.onChange(e);\r\n              }}\r\n            />\r\n            <label htmlFor=\"not-read\">Not Read yet</label>\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <h5 className=\"flex-grow-1 text-danger\">\r\n          {props.value.required ? \"All fields must be required\" : \"\"}\r\n        </h5>\r\n        <Button\r\n          // onClick={props.onHide}\r\n          onClick={() => {\r\n            //////// no need to call handleclick here because no matter where you click within the box of Modal, click fires and so does handleclick function.\r\n            // just check what it was clicked which is handled in handleClick function\r\n            if (\r\n              props.value.title !== \"\" &&\r\n              props.value.author !== \"\" &&\r\n              props.value.pages !== \"\" &&\r\n              props.value.read !== \"\"\r\n            ) {\r\n              console.log(props.value.required, \"props.value.required ///\");\r\n              props.onHide();\r\n            }\r\n          }}\r\n          // onChange={(e) => {\r\n          //   props.onChange(e);\r\n          // }}\r\n          // onClick={props.onCLick}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction AppModal(props) {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  console.log(props, \"in Appmodal\");\r\n  // const func = props.onClick;\r\n\r\n  // when calling a couple of fucntions onClick,\r\n  // create another helper function to wrap all fuctninos together\r\n  // const handleClickModal = () => {\r\n  //   // e.preventDefault();\r\n  //   props.onClick(); // needs parenthesis\r\n  //   // setModalShow(false);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n        Add a new book!\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal\r\n        value={props.value}\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        onChange={props.onChange}\r\n        onClick={props.onClick}\r\n        // onClick={() => {\r\n        //   // props.onClick();\r\n        //   props.onChange()\r\n        // }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppModal;\r\n","import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport \"../style.css\"; // navigate back to style.css\r\n// import ModalApp from \"./modal\";\r\nimport AppModal from \"./modal\";\r\n// import Card from \"./components/card\";\r\n\r\n// learn about form!!!\r\n\r\nclass Form extends React.Component {\r\n  // state must be maintained here! read the state quote u will know what this means\r\n  // The component that owns a piece of state should be the one modifying it\r\n\r\n  //////////////\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state = {\r\n  //     title: \"\",\r\n  //     author: \"\",\r\n  //     pages: \"\",\r\n  //     read: \"\",\r\n  //     lib: [],\r\n  //     required: false,\r\n  //   };\r\n  //   // without this, error message is ConstantSourceNode\r\n  //   // TypeError: this.setState is not a function\r\n  //   this.handleChange = this.handleChange.bind(this);\r\n  //   this.handleClick = this.handleClick.bind(this);\r\n  //   // this.warningHandle = this.warningHandle.bind(this);\r\n  //   // this.handleChange = this.handleChange.bind(this);\r\n  // }\r\n\r\n  // how to handle change, watch Youtube\r\n\r\n  // warningHandle(warning_state) {\r\n  //   this.setState({ required: !warning_state });\r\n  // }\r\n\r\n  // handleChange(e) {\r\n  //   console.log(\"jsut chenaged\", e.target);\r\n  //   if (e.target.name == \"title\") {\r\n  //     this.setState({ title: e.target.value });\r\n  //   } else if (e.target.name == \"author\") {\r\n  //     this.setState({ author: e.target.value });\r\n  //   } else if (e.target.name == \"pages\") {\r\n  //     this.setState({ pages: e.target.value });\r\n  //   } else if (e.target.value == \"read\") {\r\n  //     this.setState({ read: \"read\" });\r\n  //   } else if (e.target.value == \"not-read\") {\r\n  //     this.setState({ read: \"not read\" });\r\n  //   }\r\n  // }\r\n\r\n  // handleClick(e) {\r\n  //   if (e && e.target.innerHTML == \"Submit\") {\r\n  //     // check if input is valid\r\n  //     if (\r\n  //       this.state.title !== \"\" &&\r\n  //       this.state.author !== \"\" &&\r\n  //       this.state.pages !== \"\" &&\r\n  //       this.state.read !== \"\"\r\n  //     ) {\r\n  //       const new_title = this.state.title;\r\n  //       const new_author = this.state.author;\r\n  //       const new_pages = this.state.pages;\r\n  //       const new_read = this.state.pages;\r\n  //       const new_book = {\r\n  //         title: new_title,\r\n  //         author: new_author,\r\n  //         pages: new_pages,\r\n  //         read: new_read,\r\n  //       };\r\n\r\n  //       const updated_library = this.state.lib.slice();\r\n  //       updated_library.push(new_book);\r\n  //       console.log(updated_library, \"updated_library\");\r\n  //       this.setState({\r\n  //         lib: updated_library,\r\n  //       });\r\n  //       // <Card value={this.state.lib}/>\r\n  //       this.setState({ required: false });\r\n  //       console.log(\"valid /////////////\");\r\n  //     } else {\r\n  //       this.setState({ required: true });\r\n  //       console.log(\"invalid /////////////////\");\r\n  //     }\r\n  //     console.log(this, \"this shown\");\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    console.log(this.props, \"props in Fprm\");\r\n    return (\r\n      <div>\r\n        {/* <h1>React Modal</h1> */}\r\n        {/* <ModalApp show={this.state.show} handleClose={this.hideModal}>\r\n          <p>Modal</p>\r\n          <p>Data</p>\r\n        </ModalApp> */}\r\n        <AppModal\r\n          value={this.props.value}\r\n          onChange={this.props.onChange}\r\n          onClick={this.props.onClick}\r\n        />\r\n        {/* <button type=\"button\" onClick={this.showModal}>\r\n          open\r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\n// function Form() {\r\n//   // const clickHandle = () => {\r\n//   //   console.log(\"hiya\");\r\n//   //   return <ModalApp />;\r\n//   // };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={() => this.setState({ showModal: true })}>\r\n//         Add Work Log\r\n//       </button>\r\n//       {/* <button onClick={clickHandle}>Add a new book</button> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Form;\r\n\r\n// function Form() {\r\n//   const clickHandle = () => {\r\n//     return (\r\n//       <div className=\"container book-form w-100\">\r\n//         <div className=\"d-flex justify-content-center\">\r\n//           <div className=\"user_card\">\r\n//             {/* <!-- create remove button  --> */}\r\n//             <div className=\"remove-icon-box text-right\">\r\n//               <button className=\"remove-btn close-icon\">\r\n//                 <i className=\"fa fa-times align-top\" aria-hidden=\"true\"></i>\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"d-flex justify-content-center\">\r\n//               <div className=\"brand_logo_container\">\r\n//                 <div className=\"d-flex justify-content-center logo-wrapper\">\r\n//                   <i\r\n//                     className=\"fa fa-book logo-book fa-5x\"\r\n//                     aria-hidden=\"true\"\r\n//                   ></i>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"d-flex justify-content-center form_container\">\r\n//               <form>\r\n//                 <div className=\"input-group mb-3\">\r\n//                   <div className=\"input-group-append\">\r\n//                     <span className=\"input-group-text\">\r\n//                       <i className=\"fa fa-book\" aria-hidden=\"true\"></i>\r\n//                     </span>\r\n//                   </div>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"bookname\"\r\n//                     className=\"form-control input_user\"\r\n//                     id=\"bookname\"\r\n//                     placeholder=\"bookname\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"input-group mb-3\">\r\n//                   <div className=\"input-group-append\">\r\n//                     <span className=\"input-group-text\">\r\n//                       <i className=\"fas fa-user\"></i>\r\n//                     </span>\r\n//                   </div>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"authorname\"\r\n//                     className=\"form-control input_user\"\r\n//                     id=\"authorname\"\r\n//                     placeholder=\"authorname\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"input-group mb-3\">\r\n//                   <div className=\"input-group-append\">\r\n//                     <span className=\"input-group-text\">\r\n//                       <i className=\"fa fa-bookmark\" aria-hidden=\"true\"></i>\r\n//                     </span>\r\n//                   </div>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     name=\"pages\"\r\n//                     className=\"form-control input_pass\"\r\n//                     id=\"pages\"\r\n//                     placeholder=\"pages\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"read-check mb-3\">\r\n//                   <input type=\"radio\" id=\"read\" name=\"read\" value=\"read\" />\r\n//                   <label for=\"read\">Read</label>\r\n//                   <input\r\n//                     type=\"radio\"\r\n//                     id=\"not-read\"\r\n//                     name=\"read\"\r\n//                     value=\"not-read\"\r\n//                     checked\r\n//                   />\r\n//                   <label for=\"not-read\">Not Read yet</label>\r\n//                 </div>\r\n//                 <div className=\"d-flex justify-content-center mt-3 login_container\">\r\n//                   <button type=\"submit\" name=\"submit\" className=\"btn login_btn\">\r\n//                     Submit\r\n//                   </button>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={clickHandle}>Add a new book</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Form;\r\n","import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport \"../style.css\"; // navigate back to style.css\r\nimport Form from \"./form\";\r\n\r\nclass Nav extends React.Component {\r\n  // handleClick() {\r\n  //   console.log(\"hiya\");\r\n  // }\r\n\r\n  render() {\r\n    console.log(this.props, \"props in Nav\");\r\n    return (\r\n      <div className=\"d-flex justify-content-between align-items-center bg-white p-4 radius\">\r\n        <h1>Welcome to your own Library</h1>\r\n        <Form\r\n          value={this.props.value}\r\n          onChange={this.props.onChange}\r\n          onClick={this.props.onClick}\r\n        />\r\n        {/* <button onClick={this.handleClick}>click me!</button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nfunction DisplayBook(props) {\r\n  console.log(props, \"props in display book ///////////////\");\r\n  return (\r\n    <div className=\"m-2 p-5 bg-white radius\">\r\n      <div className=\"d-flex  justify-content-between w-100\">\r\n        <h2>Title: {props.book.title}</h2>\r\n        <button\r\n          onClick={() => {\r\n            props.changeHandle(props.book.id);\r\n          }}\r\n          className=\"fas fa-trash-alt btn fa-lg\"\r\n        ></button>\r\n      </div>\r\n      <p>Author: {props.book.author}</p>\r\n      <p>Pages: {props.book.pages}</p>\r\n      <button\r\n        onClick={() => {\r\n          props.changeToggle(props.book);\r\n        }}\r\n        className={\r\n          props.book.read == \"Read\" ? \"btn btn-success\" : \"btn btn-danger\"\r\n        }\r\n      >\r\n        {props.book.read == \"Read\" ? \"Read\" : \"Unread\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayBook;\r\n","import React from \"react\";\r\nimport DisplayBook from \"./books\";\r\n\r\nclass Card extends React.Component {\r\n  render() {\r\n    console.log(this.props, \"props in Card///\");\r\n    console.log(this.props.value, \"props value in Card///\");\r\n    // const books = this.props.value.lib.map((book) => ( // if class was used in index.js\r\n    const books = this.props.value.map((book) => (\r\n      <DisplayBook\r\n        changeHandle={this.props.changeHandle}\r\n        changeToggle={this.props.changeToggle}\r\n        key={book.id}\r\n        book={book}\r\n      />\r\n    ));\r\n\r\n    return <div className=\"d-flex flex-wrap\">{books}</div>;\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","// Structure Tree\r\n// root\r\n//   app\r\n//     nav\r\n//       form\r\n//         Modal\r\n//     Card\r\n//       displaycard\r\n\r\n// The component that owns a piece of state should be the one modifying it.\r\n\r\n// import React from \"react\";\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport Nav from \"./components/nav\";\r\nimport Card from \"./components/card\";\r\nimport _ from \"lodash\";\r\n// import setLocalStorage from \"./components/localstorage\";\r\n\r\nconst savedLibrary = JSON.parse(localStorage.getItem(\"library\"));\r\n\r\nfunction App() {\r\n  // grab existing books from localstorage, if there is no book in localstorage, libraby assignes an empty list\r\n  const [library, setLibrary] = useState(_.cloneDeep(savedLibrary) || []);\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"library\", JSON.stringify(library));\r\n  //   console.log(library, \"useEffect executed\");\r\n  // }, [library]);\r\n\r\n  // create state here\r\n  const [book, setState] = useState({\r\n    title: \"\",\r\n    author: \"\",\r\n    pages: \"\",\r\n    read: \"\",\r\n    required: false,\r\n  });\r\n\r\n  function handleChange(e) {\r\n    if (\r\n      e.target.name == \"title\" ||\r\n      e.target.name == \"author\" ||\r\n      e.target.name == \"pages\" ||\r\n      e.target.value == \"Unread\" ||\r\n      e.target.value == \"Read\"\r\n    ) {\r\n      // property's name and name assigned in modal.js should be same\r\n      // name is attribute and value is input here\r\n      const { name, value } = e.target;\r\n      // https://stackoverflow.com/questions/54150783/react-hooks-usestate-with-object\r\n      // Updating a specific record will require making a recall to the previous State prevState\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  }\r\n\r\n  function handleClick(e) {\r\n    // this function fires when user clicks anywhere in Modal\r\n    // this function should only fire when submit clicked so the first line checks it\r\n    if (e && e.target.innerHTML == \"Submit\") {\r\n      // check if input is valid\r\n      if (\r\n        book.title !== \"\" &&\r\n        book.author !== \"\" &&\r\n        book.pages !== \"\" &&\r\n        book.read !== \"\"\r\n      ) {\r\n        const new_title = book.title;\r\n        const new_author = book.author;\r\n        const new_pages = book.pages;\r\n        const new_read = book.read;\r\n        const new_book = {\r\n          title: new_title,\r\n          author: new_author,\r\n          pages: new_pages,\r\n          read: new_read,\r\n          id: new Date().getTime(),\r\n        };\r\n        const updated_library = _.cloneDeep(library);\r\n        updated_library.push(new_book);\r\n        setLibrary(updated_library);\r\n        console.log(library, \"after library updated\");\r\n        // all properties are in line below\r\n        // because in this line, make sure required is false to submit,\r\n        // but we cannot modify required alone so throw all elements in there\r\n        setState({\r\n          title: book.title,\r\n          author: book.author,\r\n          pages: book.pages,\r\n          read: book.read,\r\n          required: false,\r\n        });\r\n        //// reset current state so empty input does not go through validation\r\n        /// EDGE CASE\r\n        resetCurrentState();\r\n        // overwrite whole library in localstorage\r\n        localStorage.setItem(\"library\", JSON.stringify(updated_library));\r\n      } else {\r\n        // setState({ required: true }); // does not work\r\n        setState({\r\n          title: book.title,\r\n          author: book.author,\r\n          pages: book.pages,\r\n          read: book.read,\r\n          required: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteHandle(given_id) {\r\n    const new_books = library.filter((book) => book.id !== given_id);\r\n    setLibrary(new_books);\r\n    // Don't use removeItem() that as the name says removes the whole item from localStorage. Just do another setItem() to overwrite the old data.\r\n    localStorage.setItem(\"library\", JSON.stringify(new_books));\r\n  }\r\n\r\n  function handleToggle(cur_book) {\r\n    console.log(cur_book, \"cur_book /////\");\r\n    let changed_state = cur_book.read == \"Read\" ? \"Not Read\" : \"Read\";\r\n    console.log(changed_state, \"changed_state /////\");\r\n    // also update libraby\r\n    // https://stackoverflow.com/questions/49627157/update-the-attribute-value-of-an-object-using-the-map-function-in-es6\r\n    // how to edit one spefic object out of array\r\n    const editBooks = library.map((item) => {\r\n      // create new object for item\r\n      var temp = Object.assign({}, item);\r\n      if (item.id === cur_book.id) {\r\n        temp.read = changed_state;\r\n        console.log(temp, \"temp//////\");\r\n      }\r\n      return temp;\r\n    });\r\n    setLibrary(editBooks);\r\n    // might not have to use line below if I use useEffect instead\r\n    localStorage.setItem(\"library\", JSON.stringify(editBooks));\r\n  }\r\n\r\n  function resetCurrentState() {\r\n    setState({\r\n      title: \"\",\r\n      author: \"\",\r\n      pages: \"\",\r\n      read: \"\",\r\n      required: false,\r\n    });\r\n    // console.log(book, \"this.state after reset /////\");\r\n    // state still remains in above line but state has been changed\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Nav value={book} onChange={handleChange} onClick={handleClick} />\r\n      <Card\r\n        value={library}\r\n        changeHandle={deleteHandle}\r\n        changeToggle={handleToggle}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// first I wantd to go with class but handling localstorage is a lot work and doest not work well with localstorage\r\n// so i just put the whole code for a future reference\r\n\r\n// class App extends React.Component {\r\n//   // change this class to function\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       title: \"\",\r\n//       author: \"\",\r\n//       pages: \"\",\r\n//       read: \"\",\r\n//       lib: [],\r\n//       required: false,\r\n//     };\r\n//     // without this, error message is ConstantSourceNode\r\n//     // TypeError: this.setState is not a function\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//     this.handleClick = this.handleClick.bind(this);\r\n//     this.deleteHandle = this.deleteHandle.bind(this);\r\n//     this.handleToggle = this.handleToggle.bind(this);\r\n//     this.resetCurrentState = this.resetCurrentState.bind(this);\r\n//     // this.handleChange = this.handleChange.bind(this);\r\n//   }\r\n\r\n//   // how to handle change, watch Youtube\r\n\r\n//   // warningHandle(warning_state) {\r\n//   //   this.setState({ required: !warning_state });\r\n//   // }\r\n\r\n//   handleChange(e) {\r\n//     console.log(\"jsut chenaged\", e.target);\r\n//     if (e.target.name == \"title\") {\r\n//       this.setState({ title: e.target.value });\r\n//     } else if (e.target.name == \"author\") {\r\n//       this.setState({ author: e.target.value });\r\n//     } else if (e.target.name == \"pages\") {\r\n//       this.setState({ pages: e.target.value });\r\n//     } else if (e.target.value == \"read\") {\r\n//       this.setState({ read: \"Read\" });\r\n//     } else if (e.target.value == \"not-read\") {\r\n//       this.setState({ read: \"Not Read\" });\r\n//     }\r\n//   }\r\n\r\n//   handleClick(e) {\r\n//     if (e && e.target.innerHTML == \"Submit\") {\r\n//       // check if input is valid\r\n//       if (\r\n//         this.state.title !== \"\" &&\r\n//         this.state.author !== \"\" &&\r\n//         this.state.pages !== \"\" &&\r\n//         this.state.read !== \"\"\r\n//       ) {\r\n//         const new_title = this.state.title;\r\n//         const new_author = this.state.author;\r\n//         const new_pages = this.state.pages;\r\n//         const new_read = this.state.read;\r\n//         const new_book = {\r\n//           title: new_title,\r\n//           author: new_author,\r\n//           pages: new_pages,\r\n//           read: new_read,\r\n//           id: new Date().getTime(),\r\n//         };\r\n\r\n//         const updated_library = this.state.lib.slice();\r\n//         updated_library.push(new_book);\r\n//         console.log(updated_library, \"updated_library\");\r\n//         this.setState({\r\n//           lib: updated_library,\r\n//         });\r\n//         // <Card value={this.state.lib}/>\r\n//         this.setState({ required: false });\r\n//         console.log(\"valid /////////////\");\r\n//         //// reset current state so empty input does not go through validation\r\n//         /// EDGE CASE\r\n//         this.resetCurrentState();\r\n//         // add a new book to localstorage\r\n//         localStorage.setItem(\r\n//           JSON.stringify(new_book.id),\r\n//           JSON.stringify(new_book)\r\n//         );\r\n//       } else {\r\n//         this.setState({ required: true });\r\n//         console.log(\"invalid /////////////////\");\r\n//       }\r\n//       console.log(this, \"this shown\");\r\n//     }\r\n//   }\r\n\r\n//   deleteHandle(given_id) {\r\n//     const new_books = this.state.lib.filter((book) => book.id !== given_id);\r\n//     this.setState({ lib: new_books });\r\n//     localStorage.removeItem(JSON.stringify(given_id));\r\n//   }\r\n\r\n//   handleToggle(cur_book) {\r\n//     console.log(cur_book, \"cur_book /////\");\r\n//     let changed_state = cur_book.read == \"Read\" ? \"Not Read\" : \"Read\";\r\n//     console.log(changed_state, \"changed_state /////\");\r\n//     // also update libraby\r\n//     // https://stackoverflow.com/questions/49627157/update-the-attribute-value-of-an-object-using-the-map-function-in-es6\r\n//     // how to edit one spefic object out of array\r\n//     const editBooks = this.state.lib.map((item) => {\r\n//       // create new object for item\r\n//       var temp = Object.assign({}, item);\r\n//       if (item.id === cur_book.id) {\r\n//         temp.read = changed_state;\r\n//         console.log(temp, \"temp//////\");\r\n//       }\r\n//       return temp;\r\n//     });\r\n\r\n//     console.log(editBooks, \"editBooks /////\");\r\n//     this.setState({ lib: editBooks });\r\n//     console.log(this.state.lib, \"this.state.lib /////\");\r\n\r\n//     //   this.state.lib.forEach(function (book) {\r\n//     //     if(book.id === cur_book.id){\r\n//     //       this.setState({ read: changed_state });\r\n//     //     }\r\n//     // });\r\n\r\n//     //   console.log(this.state.read, \"this.state.read /////\");\r\n//     //   console.log(this.state.lib, \"this.state.lib /////\");\r\n//   }\r\n\r\n//   resetCurrentState() {\r\n//     this.setState({\r\n//       title: \"\",\r\n//       author: \"\",\r\n//       pages: \"\",\r\n//       read: \"\",\r\n//       required: false,\r\n//     });\r\n//     console.log(this.state, \"this.state after reset /////\");\r\n//     // state still remains in above line but state has been changed\r\n//   }\r\n"],"sourceRoot":""}